<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:connect-ftps-inbound.xml"/>
        <spring:import resource="classpath:global-configurations.xml"/>
        <spring:import resource="classpath:global-connectors.xml"/>
        <spring:import resource="classpath:nbd002-inbound.xml"/>
    </spring:beans>
    <munit:test name="ftps-inbound-test-suite-ftps-inboundTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['archive']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]" mimeType="text/csv">
                <mock:inbound-properties>
                    <mock:inbound-property key="fileName" value="test.txt"/>
                </mock:inbound-properties>
            </mock:then-return>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['JMS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <flow-ref name="connect-ftps-inbound" doc:name="connect-ftps-inbound"/>
        <logger message="#[payload]##########" level="INFO" doc:name="Logger"/>
        <munit:assert-on-equals expectedValue="#[&quot;&quot;]" actualValue="#[&quot;&quot;]" doc:name="Assert Equals"/>
    </munit:test>
    <munit:test name="ftps-inbound-test-suiteTest" description="MUnit Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['archive']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]" mimeType="application/json">
                <mock:inbound-properties>
                    <mock:inbound-property key="fileName" value="test.txt"/>
                </mock:inbound-properties>
            </mock:then-return>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['JMS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <flow-ref name="connect-ftps-inbound" doc:name="connect-ftps-inbound"/>
        <logger message="#[payload] ########" level="INFO" doc:name="Logger"/>
         <munit:assert-on-equals expectedValue="#[&quot;&quot;]" actualValue="#[&quot;&quot;]" doc:name="Assert Equals"/>
        
    </munit:test>
</mule>
