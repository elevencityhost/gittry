<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">

	<munit:config name="munit" doc:name="MUnit configuration"
		mock-connectors="false" />
	<spring:beans>
		<spring:import resource="classpath:connect-email-service.xml" />
		<spring:import resource="classpath:exception-handler.xml" />
		<spring:import resource="classpath:global-configurations.xml" />
		<spring:import resource="classpath:global-connectors.xml" />
	</spring:beans>
	<munit:test name="connect-email-service-test-suite-email-serviceFlowTest"
		description="Test" >
		<set-payload
			value="{ &quot;toList&quot;:[&quot;saiprasad.jonnala@invenio-solutions.com&quot;,&quot;shruthi.kolloju@invenio-solutions.com&quot;],      &quot;ccList&quot;:[&quot;ssas&quot;],      &quot;bccList&quot;:[],      &quot;replyTo&quot;:&quot;testemailredington@r-exchange.net&quot;,         &quot;subject&quot;:&quot;Notification Message Email Subject&quot;,      &quot;body&quot;:&quot;Sample Body Content&quot;,   &quot;templateID&quot;:&quot;index&quot;,   &quot;keyValuePairs&quot;:{          &quot;&lt;serialnumber&gt;&quot;:&quot;123456&quot;,          &quot;&lt;jobcardnumber&gt;&quot;:&quot;JOB123456&quot;         },         &quot;attachments&quot;:[&quot;attachmentpath1&quot;,&quot;attachmentpath2&quot;,&quot;attachmentpath3&quot;]  } "
			doc:name="Set EmailMessage Content As Payload" />
		<component class="com.redn.connect.test.emailservice.TestPrepareCEM"
			doc:name="Java - Test Prepare CEM With Email Message As Payload Without Attachments" />
		<flow-ref name="email-serviceFlow" doc:name="email-serviceFlow" />
		<munit:assert-on-equals message="Email Not Sent Successfully !!!!!!!!!!!"
			expectedValue="Email Sent Successfully !!!!" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>

	<munit:test
		name="connect-email-service-test-suite-email-serviceFlow-with-attachments-CEM-Test"
		description="connect-email-service-test-suite-email-serviceFlow-with-attachments-Test" >
		<set-payload
			value="{&quot;toList&quot;:[&quot;saiprasad.jonnala@invenio-solutions.com&quot;,&quot;shruthi.kolloju@invenio-solutions.com&quot;],      &quot;ccList&quot;:[&quot;ssas&quot;],      &quot;bccList&quot;:[],      &quot;replyTo&quot;:&quot;testemailredington@r-exchange.net&quot;,         &quot;subject&quot;:&quot;Notification Message Email Subject&quot;,      &quot;body&quot;:&quot;&quot;,   &quot;templateID&quot;:&quot;index&quot;,   &quot;keyValuePairs&quot;:{          &quot;&lt;serialnumber&gt;&quot;:&quot;123456&quot;,          &quot;&lt;jobcardnumber&gt;&quot;:&quot;JOB123456&quot;         },         &quot;attachments&quot;:[&quot;attachmentpath1&quot;,&quot;attachmentpath2&quot;,&quot;attachmentpath3&quot;]  } "
			doc:name="Set EmailMessage Content As Payload" />
		<component
			class="com.redn.connect.test.emailservice.TestPrepareCEMWithCustomProps"
			doc:name="Java - Test Prepare CEM With Email Message As Payload Without Attachments" />
		<flow-ref name="email-serviceFlow" doc:name="Flow-ref to email-serviceFlow" />
		<munit:assert-on-equals message="Email Not Sent Successfully !!!!!!!!!!!"
			expectedValue="Email Sent Successfully !!!!" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>

	<munit:test name="connect-email-service-test-suite-string-payload-Test"
		description="connect-email-service-test-suite-string-payload-Test" >
		<set-payload
			value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt; &lt;ConnectEnterpriseMessage xmlns=&quot;http://schemas.connect.com/enterprise/services/2014/05&quot; xmlns:ns2=&quot;http://schemas.connect.com/enterprise/services/2016/11&quot;&gt;     &lt;EnterpriseHeader&gt;         &lt;MessageId&gt;e67c97c0-4f5c-11e7-b9c4-30e171830867&lt;/MessageId&gt;         &lt;CreatedUtc&gt;2017-06-12T16:20:08.128+05:30&lt;/CreatedUtc&gt;         &lt;ServiceName&gt;NotificationService&lt;/ServiceName&gt;         &lt;MessageSource&gt;RedingtonGulf&lt;/MessageSource&gt;         &lt;Action&gt;Non AS2&lt;/Action&gt;         &lt;Communication&gt;Sync&lt;/Communication&gt;         &lt;Priority&gt;5&lt;/Priority&gt;         &lt;Component&gt;connect-internal-http&lt;/Component&gt;     &lt;/EnterpriseHeader&gt;     &lt;EnterpriseBody&gt;         &lt;payload xmlns=&quot;&quot; xmlns:ns3=&quot;http://schemas.connect.com/enterprise/services/2014/05&quot;&gt;{ &quot;toList&quot;:[&quot;saiprasad.jonnala@invenio-solutions.com&quot;,&quot;shruthi.kolloju@invenio-solutions.com&quot;],      &quot;ccList&quot;:[&quot;ssas&quot;],      &quot;bccList&quot;:[],      &quot;replyTo&quot;:&quot;testemailredington@r-exchange.net&quot;,         &quot;subject&quot;:&quot;Notification Message Email Subject&quot;,      &quot;body&quot;:&quot;Sample Body Content&quot;,   &quot;templateID&quot;:&quot;index&quot;,   &quot;keyValuePairs&quot;:{          &quot;serialnumber&quot;:&quot;123456&quot;,          &quot;jobcardnumber&quot;:&quot;JOB123456&quot;         },         &quot;attachments&quot;:[&quot;attachmentpath1&quot;,&quot;attachmentpath2&quot;,&quot;attachmentpath3&quot;]  } &lt;/payload&gt;     &lt;/EnterpriseBody&gt; &lt;/ConnectEnterpriseMessage&gt;"
			doc:name="Set ConnectEnterpriseMessage Content As Payload" mimeType="text/xml" />
		<flow-ref name="email-serviceFlow" doc:name="email-serviceFlow" />
		<munit:assert-on-equals message="Email Not Sent Successfully !!!!!!!!!!!"
			expectedValue="Email Sent Successfully !!!!" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>
    <munit:test name="connect-email-service-test-invalid-testdata" description="MUnit Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock - CEE Queue">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['JMS CEH Queue']"/>
            </mock:with-attributes>
        </mock:when>
        <set-payload value="{   &quot;applicationID&quot;:&quot;redington&quot;,      &quot;requestID1&quot;:&quot;SAIPRASAD1234&quot;,      &quot;toList&quot;:[&quot;saiprasad.jonnala@invenio-solutions.com&quot;,&quot;shruthi.kolloju@invenio-solutions.com&quot;],      &quot;ccList&quot;:[&quot;ssas&quot;],      &quot;bccList&quot;:[],      &quot;replyTo&quot;:&quot;testemailredington@r-exchange.net&quot;,         &quot;subject&quot;:&quot;Notification Message Email Subject&quot;,      &quot;body&quot;:&quot;&quot;,   &quot;templateID&quot;:&quot;index&quot;,   &quot;keyValuePairs&quot;:{          &quot;&lt;serialnumber&gt;&quot;:&quot;123456&quot;,          &quot;&lt;jobcardnumber&gt;&quot;:&quot;JOB123456&quot;         },         &quot;attachments&quot;:[&quot;attachmentpath1&quot;,&quot;attachmentpath2&quot;,&quot;attachmentpath3&quot;]  } " mimeType="application/json" doc:name="Set Invalid EmailMessage JSON Data"/>
        <component class="com.redn.connect.test.emailservice.TestPrepareCEM" doc:name="Java Test Prepare CEM"/>
        <flow-ref name="email-serviceFlow" doc:name="email-serviceFlow"/>
        <munit:assert-on-equals message="CEE Sent To CEH Queue !!!!!!" expectedValue="#[payload instanceof com.redn.connect.vo.ConnectEnterpriseException]" actualValue="#[payload instanceof com.redn.connect.vo.ConnectEnterpriseException]" doc:name="Assert Equals Check CEE Instance"/>
    </munit:test>

	<munit:test	name="connect-email-service-test-suite-string-attachments-payload-or-retriable-test"
		description="connect-email-service-test-suite-string-attachments-payload-test or retriable queue scenario" >
        <set-payload value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt; &lt;ConnectEnterpriseMessage xmlns=&quot;http://schemas.connect.com/enterprise/services/2014/05&quot; xmlns:ns2=&quot;http://schemas.connect.com/enterprise/services/2016/11&quot;&gt;     &lt;EnterpriseHeader&gt;         &lt;MessageId&gt;00ed8c80-4f77-11e7-8eb2-30e171830867&lt;/MessageId&gt;         &lt;CreatedUtc&gt;2017-06-12T19:26:59.417+05:30&lt;/CreatedUtc&gt;         &lt;ServiceName&gt;NotificationService&lt;/ServiceName&gt;         &lt;MessageSource&gt;RedingtonGulf&lt;/MessageSource&gt;         &lt;Action&gt;Non AS2&lt;/Action&gt;         &lt;Communication&gt;Sync&lt;/Communication&gt;         &lt;Priority&gt;5&lt;/Priority&gt;         &lt;Component&gt;connect-internal-http&lt;/Component&gt;         &lt;Custom&gt;             &lt;customProps&gt;                 &lt;Contents&gt;                     &lt;Name&gt;attachmentPath&lt;/Name&gt;                     &lt;Value&gt;E:\empmaster.xls&lt;/Value&gt;                 &lt;/Contents&gt;                 &lt;Contents&gt;                     &lt;Name&gt;attachmentPath&lt;/Name&gt;                     &lt;Value&gt;E:\sample.txt&lt;/Value&gt;                 &lt;/Contents&gt;             &lt;/customProps&gt;         &lt;/Custom&gt;     &lt;/EnterpriseHeader&gt;     &lt;EnterpriseBody&gt;         &lt;payload xmlns=&quot;&quot; xmlns:ns3=&quot;http://schemas.connect.com/enterprise/services/2014/05&quot;&gt;{ &quot;toList&quot;:[&quot;saiprasad.jonnala@invenio-solutions.com&quot;,&quot;shruthi.kolloju@invenio-solutions.com&quot;],      &quot;ccList&quot;:[&quot;ssas&quot;],      &quot;bccList&quot;:[],      &quot;replyTo&quot;:&quot;testemailredington@r-exchange.net&quot;,         &quot;subject&quot;:&quot;Notification Message Email Subject&quot;,      &quot;body&quot;:&quot;Sample Body Content&quot;,   &quot;templateID&quot;:&quot;index&quot;,   &quot;keyValuePairs&quot;:{          &quot;serialnumber&quot;:&quot;123456&quot;,          &quot;jobcardnumber&quot;:&quot;JOB123456&quot;         },         &quot;attachments&quot;:[&quot;attachmentpath1&quot;,&quot;attachmentpath2&quot;,&quot;attachmentpath3&quot;]  } &lt;/payload&gt;     &lt;/EnterpriseBody&gt; &lt;/ConnectEnterpriseMessage&gt;" mimeType="text/xml" doc:name="Set CEM With Attachments As Payload"/>
        <flow-ref name="email-serviceFlow" doc:name="email-serviceFlow"/>
        <munit:assert-on-equals message="Email Not Sent  !!!!" expectedValue="Email Sent Successfully !!!!" actualValue="#[payload]" doc:name="Assert Equals"/>
	</munit:test>
	
	

</mule>
