<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration" mock-connectors="false" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:connect-internal-http.xml"/>
        <spring:import resource="classpath:exception-handler.xml"/>
        <spring:import resource="classpath:global-configurations.xml"/>
        <spring:import resource="classpath:global-connectors.xml"/>
    </spring:beans>
    <http:request-config name="HTTP_TestFlow_Request_Configuration" host="localhost" port="${connect.internal.http.port}" doc:name="HTTP Request Configuration"/>
    <munit:test name="new-test-suite-connect-internal-httpFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock - API Manager Call">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP - Call API Manager']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <custom-transformer class="com.redn.connect.test.internalhttp.TestPrepareCEMWithAttachments" doc:name="Java - Test Prepare CEM With Attachments"/>
        <logger message="========== OutboundAttachments ======  #[message.outboundAttachments.size()]  === #[message.outboundAttachments.entrySet()] ======== " level="INFO" doc:name="Logger - Outbound Attachments "/>
        <http:request config-ref="HTTP_TestFlow_Request_Configuration" path="${connect.internal.http.path}" method="POST" doc:name="HTTP - Trigger Internal HTTP Flow"/>
        <mock:verify-call messageProcessor=".*:.*" doc:name="Verify Call - API Manager">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP - Call API Manager']"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
    
    <munit:test description="new-test-suite-connect-internal-httpFlowTest_FilterUnacceptedException" name="new-test-suite-connect-internal-httpFlowTest_FilterUnacceptedException">
        <mock:when messageProcessor=".*:.*" doc:name="Mock - Send Excepion To CEH">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Send Exception to CEH']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="TEST DATA" doc:name="Set Empty - Payload"/>
        <logger message="========== OutboundAttachments ======  #[message.outboundAttachments.size()]  === #[message.outboundAttachments.entrySet()] ======== " level="INFO" doc:name="Logger - Outbound Attachments"/>
    	<http:request config-ref="HTTP_TestFlow_Request_Configuration" path="${connect.internal.http.path}" method="POST" doc:name="HTTP - Trigger Internal HTTP Flow"/>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger message="========RECEIVED RESPONSE ============= #[payload]" level="INFO" doc:name="Logger - Received Response"/>
        <munit:assert-on-equals message="Exception Received is not Filter Unaccepted Exception !!!!" expectedValue="Filter Unaccepted Exception !!!" actualValue="#[payload]" doc:name="Assert Equals"/>
    </munit:test>
</mule>
